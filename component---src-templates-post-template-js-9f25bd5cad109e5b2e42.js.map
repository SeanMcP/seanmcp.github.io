{"version":3,"sources":["webpack:///./src/components/post/PostBio.js","webpack:///./src/components/post/PostHelmet.js","webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/common/Icon.js","webpack:///./src/components/common/CategoryLink.js","webpack:///./src/components/common/SearchLink.js","webpack:///./src/components/common/PageHeader.js","webpack:///./src/components/post/PostDate.js","webpack:///./src/components/common/TagLinks.js","webpack:///./src/components/post/TweetButton.js","webpack:///./src/components/post/PostFooter.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["socialLinks","href","icon","name","PostBio","links","map","platform","react_default","a","createElement","className","key","Icon","Thumbnail","PostHelmet","_ref","postDescription","postImageUrl","postTitle","siteTitle","Helmet_default","htmlAttributes","lang","meta","content","title","propTypes","PropTypes","string","isRequired","PostTemplate","render","post","this","props","data","markdownRemark","get","frontmatter","summary","excerpt","Layout","location","post_PostHelmet","PageHeader","centered","PostDate","date","hideIcon","dangerouslySetInnerHTML","__html","html","PostFooter","articleHref","articleTitle","category","modifier","tags","post_PostBio","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_feather__WEBPACK_IMPORTED_MODULE_2__","size","I","AllIcons","number","_Icon__WEBPACK_IMPORTED_MODULE_3__","_SearchLink__WEBPACK_IMPORTED_MODULE_4__","CategoryLink","lede","queryKey","queryValue","bool","gatsby__WEBPACK_IMPORTED_MODULE_2__","SearchLink","to","children","_common_Icon__WEBPACK_IMPORTED_MODULE_2__","TagLinks","tag","arrayOf","TweetButton","target","common_TagLinks","post_TweetButton","dP","f","FProto","Function","prototype","nameRE","configurable","match","e"],"mappings":"6NAKMA,EAAc,CAChB,CACIC,KAAM,6BACNC,KAAM,SACNC,KAAM,UAEV,CACIF,KAAM,+BACNC,KAAM,UACNC,KAAM,WAEV,CACIF,KAAM,kCACNC,KAAM,WACNC,KAAM,aA+BCC,EA3BC,WACZ,IAAMC,EAAQL,EAAYM,IAAI,SAAAC,GAC1B,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAuBC,IAAKL,EAASJ,MAC/CK,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAU,uBAAuBT,KAAMK,EAASL,OACtDM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBV,KAAMM,EAASN,MAC9CM,EAASJ,SAK1B,OACIK,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACfH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWH,UAAW,mBACtBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,uBACeF,EAAAC,EAAAC,cAAA,gCADf,0IAMAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwBN,wCCxChDU,EAAa,SAAAC,GAAA,IACfC,EADeD,EACfC,gBACAC,EAFeF,EAEfE,aACAC,EAHeH,EAGfG,UACAC,EAJeJ,EAIfI,UAJe,OAMfZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACIa,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAErB,KAAM,cAAesB,QAASR,IACvCS,MAAUP,EAAL,MAAoBC,GAEzBZ,EAAAC,EAAAC,cAAA,QAAMP,KAAK,eAAesB,QAASR,IACnCT,EAAAC,EAAAC,cAAA,QAAMP,KAAK,eAAesB,QAAQ,cAClCjB,EAAAC,EAAAC,cAAA,QAAMP,KAAK,gBAAgBsB,QAASN,IAEnCD,GAAgBV,EAAAC,EAAAC,cAAA,QAAMP,KAAK,gBAAgBsB,QAASP,MAI7DH,EAAWY,UAAY,CACnBV,gBAAiBW,IAAUC,OAAOC,WAClCZ,aAAcU,IAAUC,OACxBV,UAAWS,IAAUC,OAAOC,WAC5BV,UAAWQ,IAAUC,OAAOC,YAGjBf,oDCVTgB,4FACFC,kBACI,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBjB,EAAYkB,IAAIJ,KAAKC,MAAO,gCAC5BlB,EAAkBgB,EAAKM,YAAYC,SAAWP,EAAKQ,QACnDtB,EAAYc,EAAKM,YAAYb,MAEnC,OACIlB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUjB,MAAON,GAC1CZ,EAAAC,EAAAC,cAACkC,EAAD,CACI3B,gBAAiBA,EACjBE,UAAWA,EACXC,UAAWA,IAEfZ,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAYC,UAAQ,GAChBtC,EAAAC,EAAAC,cAAA,UAAKS,GACLX,EAAAC,EAAAC,cAAA,WAASC,UAAW,yBAChBH,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUC,KAAMf,EAAKM,YAAYS,KAAMC,UAAQ,MAGvDzC,EAAAC,EAAAC,cAAA,QAAMwC,wBAAyB,CAAEC,OAAQlB,EAAKmB,QAC9C5C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACIC,YAAaX,SAAS1C,KACtBsD,aAActB,EAAKM,YAAYb,MAC/B8B,SAAUvB,EAAKM,YAAYiB,SAC3BR,KAAMf,EAAKM,YAAYS,KACvBS,SAAU,gBACVC,KAAMzB,EAAKM,YAAYmB,OAE3BlD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACiD,EAAD,YAhCOC,IAAMC,WAyCpBC,GAFE/B,YAEO,+CC7DtB,IAAAgC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAIMnD,EAAO,SAAAG,GAA+B,IAA5BL,EAA4BK,EAA5BL,UAAWT,EAAiBc,EAAjBd,KAAMoE,EAAWtD,EAAXsD,KACvBC,EAAIC,EAAStE,GACnB,OACI+D,EAAAxD,EAAAC,cAAC6D,EAAD,CAAG5D,UAAWA,GAAwB,KAAM2D,KAAMA,GAAc,MAIxEzD,EAAKc,UAAY,CACbhB,UAAWiB,IAAUC,OACrB3B,KAAM0B,IAAUC,OAAOC,WACvBwC,KAAM1C,IAAU6C,QAGL5D,wCCjBf,IAAAkD,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAO,GAAAV,EAAA,KAAAA,EAAA,MAAAW,EAAAX,EAAA,KAOMY,EAAe,SAAA5D,GAA4C,IAAzCwC,EAAyCxC,EAAzCwC,SAAUP,EAA+BjC,EAA/BiC,SAAgBQ,GAAezC,EAArB6D,KAAqB7D,EAAfyC,UAC9C,OACIQ,EAAAxD,EAAAC,cAAA,OACIC,UAAS,iBACL8C,EAAQ,iBAAoBA,EAAa,MAG3CR,GACEgB,EAAAxD,EAAAC,cAACgE,EAAA,EAAD,CAAM/D,UAAW,qBAAsBT,KAAM,WAGjD+D,EAAAxD,EAAAC,cAACiE,EAAA,EAAD,CAAYG,SAAU,aAAcC,WAAYvB,MAK5DoB,EAAajD,UAAY,CACrB6B,SAAU5B,IAAUC,OAAOC,WAC3BmB,SAAUrB,IAAUoD,KACpBH,KAAMjD,IAAUC,OAChB4B,SAAU7B,IAAUC,QAGT+C,wCC9Bf,IAAAb,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAc,EAAAjB,EAAA,KAIMkB,EAAa,SAAAlE,GAAA,IAAGL,EAAHK,EAAGL,UAAWmE,EAAd9D,EAAc8D,SAAUC,EAAxB/D,EAAwB+D,WAAxB,OACfd,EAAAxD,EAAAC,cAACuE,EAAA,KAAD,CACItE,UAAS,0BAA4BmE,EAA5B,KACLnE,GAAwB,IAE5BwE,GAAE,IAAML,EAAN,IAAkBC,GAEnBA,IAITG,EAAWvD,UAAY,CACnBhB,UAAWiB,IAAUC,OACrBiD,SAAUlD,IAAUC,OAAOC,WAC3BiD,WAAYnD,IAAUC,OAAOC,YAGlBoD,wCCrBf,IAAAnB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAGMnB,EAAa,SAAA7B,GAA4B,IAAzB8B,EAAyB9B,EAAzB8B,SAAUsC,EAAepE,EAAfoE,SAC5B,OACInB,EAAAxD,EAAAC,cAAA,UACIC,UAAS,eAAgBmC,EAAW,uBAAyB,KAE5DsC,EACDnB,EAAAxD,EAAAC,cAAA,aAKZmC,EAAWlB,UAAY,CACnBmB,SAfJkB,EAAAE,EAAAC,GAecvC,EAAUoD,MAGTnC,wCClBf,IAAAkB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAkB,EAAArB,EAAA,KAKMjB,EAAW,SAAA/B,GAAkC,IAA/BgC,EAA+BhC,EAA/BgC,KAAMC,EAAyBjC,EAAzBiC,SAAUQ,EAAezC,EAAfyC,SAChC,OACIQ,EAAAxD,EAAAC,cAAA,OAAKC,UAAS,aAAc8C,EAAQ,aAAgBA,EAAa,MAC3DR,GACEgB,EAAAxD,EAAAC,cAAC2E,EAAA,EAAD,CAAM1E,UAAW,iBAAkBT,KAAM,aAE7C+D,EAAAxD,EAAAC,cAAA,QAAMC,UAAU,kBAAkBqC,KAK9CD,EAASpB,UAAY,CACjBqB,KAAMpB,IAAUC,OAAOC,WACvBmB,SAAUrB,IAAUoD,KACpBvB,SAAU7B,IAAUC,QAGTkB,wHChBTuC,EAAW,SAAAtE,GAAkC,IAA/BiC,EAA+BjC,EAA/BiC,SAAUQ,EAAqBzC,EAArByC,SAAUC,EAAW1C,EAAX0C,KACpC,OACIlD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aAAc8C,EAAQ,aAAgBA,EAAa,MAC3DR,GAAYzC,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAW,iBAAkBT,KAAM,QACtDwD,EAAKpD,IAAI,SAAAiF,GAAG,OACT/E,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAYtE,IAAK2E,EAAKT,SAAU,OAAQC,WAAYQ,QAMpED,EAAS3D,UAAY,CACjBsB,SAAUrB,IAAUoD,KACpBvB,SAAU7B,IAAUC,OACpB6B,KAAM9B,IAAU4D,QAAQ5D,IAAUC,QAAQC,YAG/BwD,QClBTG,EAAc,SAAAtD,GAChB,IAGMlC,EAAI,0CAHC,IAAOkC,EAAMoB,aAAb,sCACPpB,EAAMmB,aAGV,OACI9C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcV,KAAMA,EAAMyF,OAAO,UAC1ClF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMF,UAAW,oBAAqBT,KAAM,YAC5CM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,WAKZ8E,EAAY9D,UAAY,CACpB2B,YAAa1B,IAAUC,OAAOC,WAC9ByB,aAAc3B,IAAUC,OAAOC,YAGpB2D,QCfTpC,EAAa,SAAArC,GAAA,IACfsC,EADetC,EACfsC,YACAC,EAFevC,EAEfuC,aACAC,EAHexC,EAGfwC,SACAR,EAJehC,EAIfgC,KACAS,EALezC,EAKfyC,SACAC,EANe1C,EAMf0C,KANe,OAQflD,EAAAC,EAAAC,cAAA,UACIC,UAAS,eAAgB8C,EAAQ,eAAkBA,EAAa,KAE/DT,GAAQxC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUC,KAAMA,EAAMS,SAAS,gBACvCD,GAAYhD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAcpB,SAAUA,IACrChD,EAAAC,EAAAC,cAACiF,EAAD,CAAUlC,SAAU,cAAeC,KAAMA,IACxCJ,GAAeC,GACZ/C,EAAAC,EAAAC,cAACkF,EAAD,CACItC,YAAaA,EACbC,aAAcA,MAM9BF,EAAW1B,UAAY,CACnB2B,YAAa1B,IAAUC,OACvB0B,aAAc3B,IAAUC,OACxBmB,KAAMpB,IAAUC,OAChB4B,SAAU7B,IAAUC,OACpB6B,KAAM9B,IAAU4D,QAAQ5D,IAAUC,QAAQC,YAG/BuB,2BCvCf,IAAAwC,EAAS7B,EAAQ,IAAc8B,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkB/B,EAAQ,KAAgB6B,EAAAE,EAH1C,OAG0C,CAC1CI,cAAA,EACA7D,IAAA,WACA,IACA,UAAAJ,MAAAkE,MAAAF,GAAA,GACK,MAAAG,GACL","file":"component---src-templates-post-template-js-9f25bd5cad109e5b2e42.js","sourcesContent":["import React from 'react';\n\nimport Icon from '../common/Icon';\nimport Thumbnail from '../common/Thumbnail';\n\nconst socialLinks = [\n    {\n        href: 'https://github.com/seanmcp',\n        icon: 'GitHub',\n        name: 'GitHub'\n    },\n    {\n        href: 'https://twitter.com/_seanmcp',\n        icon: 'Twitter',\n        name: 'Twitter'\n    },\n    {\n        href: 'https://linkedin.com/in/seanmcp',\n        icon: 'Linkedin',\n        name: 'LinkedIn'\n    }\n];\n\nconst PostBio = () => {\n    const links = socialLinks.map(platform => {\n        return (\n            <li className=\"PostBio__social-item\" key={platform.name}>\n                <Icon className=\"PostBio__social-icon\" icon={platform.icon} />\n                <a className=\"PostBio__social-link\" href={platform.href}>\n                    {platform.name}\n                </a>\n            </li>\n        );\n    });\n    return (\n        <section className=\"PostBio\">\n            <Thumbnail className={'PostBio__image'} />\n            <main className=\"PostBio__content\">\n                <p>\n                    My name is <strong>Sean McPherson</strong>, and I am a\n                    software developer in Atlanta, GA. I write about web\n                    development, JavaScript, React, and occassionally some other\n                    things.\n                </p>\n                <ul className=\"PostBio__social-list\">{links}</ul>\n            </main>\n        </section>\n    );\n};\n\nexport default PostBio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nconst PostHelmet = ({\n    postDescription,\n    postImageUrl,\n    postTitle,\n    siteTitle\n}) => (\n    <Helmet\n        htmlAttributes={{ lang: 'en' }}\n        meta={[{ name: 'description', content: postDescription }]}\n        title={`${postTitle} | ${siteTitle}`}\n    >\n        <meta name=\"twitter:card\" content={postDescription} />\n        <meta name=\"twitter:site\" content=\"@_seanmcp\" />\n        <meta name=\"twitter:title\" content={postTitle} />\n        {/* <meta name=\"twitter:description\" content=\"View the album on Flickr.\" /> */}\n        {postImageUrl && <meta name=\"twitter:image\" content={postImageUrl} />}\n    </Helmet>\n);\n\nPostHelmet.propTypes = {\n    postDescription: PropTypes.string.isRequired,\n    postImageUrl: PropTypes.string,\n    postTitle: PropTypes.string.isRequired,\n    siteTitle: PropTypes.string.isRequired\n};\n\nexport default PostHelmet;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/common/PageHeader';\nimport PostBio from '../components/post/PostBio';\nimport PostDate from '../components/post/PostDate';\nimport PostFooter from '../components/post/PostFooter';\nimport PostHelmet from '../components/post/PostHelmet';\n\n{\n    /* <meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:site\" content=\"@flickr\" />\n<meta name=\"twitter:title\" content=\"Small Island Developing States Photo Submission\" />\n<meta name=\"twitter:description\" content=\"View the album on Flickr.\" />\n<meta name=\"twitter:image\" content=\"https://farm6.staticflickr.com/5510/14338202952_93595258ff_z.jpg\" /> */\n}\n\nclass PostTemplate extends React.Component {\n    render() {\n        const post = this.props.data.markdownRemark;\n        const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n        const postDescription = post.frontmatter.summary || post.excerpt;\n        const postTitle = post.frontmatter.title;\n\n        return (\n            <Layout location={this.props.location} title={siteTitle}>\n                <PostHelmet\n                    postDescription={postDescription}\n                    postTitle={postTitle}\n                    siteTitle={siteTitle}\n                />\n                <article className=\"PostTemplate\">\n                    <PageHeader centered>\n                        <h1>{postTitle}</h1>\n                        <section className={'PostTemplate__details'}>\n                            <PostDate date={post.frontmatter.date} hideIcon />\n                        </section>\n                    </PageHeader>\n                    <main dangerouslySetInnerHTML={{ __html: post.html }} />\n                    <hr />\n                    <PostFooter\n                        articleHref={location.href}\n                        articleTitle={post.frontmatter.title}\n                        category={post.frontmatter.category}\n                        date={post.frontmatter.date}\n                        modifier={'post-template'}\n                        tags={post.frontmatter.tags}\n                    />\n                    <hr />\n                    <PostBio />\n                </article>\n            </Layout>\n        );\n    }\n}\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt\n            html\n            frontmatter {\n                category\n                date(formatString: \"MMMM D, YYYY\")\n                summary\n                tags\n                title\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as AllIcons from 'react-feather';\n\nconst Icon = ({ className, icon, size }) => {\n    const I = AllIcons[icon];\n    return (\n        <I className={className ? className : null} size={size ? size : 20} />\n    );\n};\n\nIcon.propTypes = {\n    className: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.number\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Folder } from 'react-feather';\n\nimport Icon from './Icon';\nimport SearchLink from './SearchLink';\n\nconst CategoryLink = ({ category, hideIcon, lede, modifier }) => {\n    return (\n        <div\n            className={`CategoryLink ${\n                modifier ? `CategoryLink--${modifier}` : ''\n            }`}\n        >\n            {!hideIcon && (\n                <Icon className={'CategoryLink__icon'} icon={'Folder'} />\n                // <Folder className={'CategoryLink__icon'} size={20} />\n            )}\n            <SearchLink queryKey={'categories'} queryValue={category} />\n        </div>\n    );\n};\n\nCategoryLink.propTypes = {\n    category: PropTypes.string.isRequired,\n    hideIcon: PropTypes.bool,\n    lede: PropTypes.string,\n    modifier: PropTypes.string\n};\n\nexport default CategoryLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst SearchLink = ({ className, queryKey, queryValue }) => (\n    <Link\n        className={`SearchLink SearchLink--${queryKey} ${\n            className ? className : ''\n        }`}\n        to={`/${queryKey}/${queryValue}`}\n    >\n        {queryValue}\n    </Link>\n);\n\nSearchLink.propTypes = {\n    className: PropTypes.string,\n    queryKey: PropTypes.string.isRequired,\n    queryValue: PropTypes.string.isRequired\n};\n\nexport default SearchLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeader = ({ centered, children }) => {\n    return (\n        <header\n            className={`PageHeader ${centered ? 'PageHeader--centered' : ''}`}\n        >\n            {children}\n            <hr />\n        </header>\n    );\n};\n\nPageHeader.propTypes = {\n    centered: PropTypes.bool\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../common/Icon';\n\nconst PostDate = ({ date, hideIcon, modifier }) => {\n    return (\n        <div className={`PostDate ${modifier ? `PostDate--${modifier}` : ''}`}>\n            {!hideIcon && (\n                <Icon className={'PostDate__icon'} icon={'Calendar'} />\n            )}\n            <time className=\"PostDate__date\">{date}</time>\n        </div>\n    );\n};\n\nPostDate.propTypes = {\n    date: PropTypes.string.isRequired,\n    hideIcon: PropTypes.bool,\n    modifier: PropTypes.string\n};\n\nexport default PostDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchLink from './SearchLink';\nimport Icon from '../common/Icon';\n\nconst TagLinks = ({ hideIcon, modifier, tags }) => {\n    return (\n        <div className={`TagLinks ${modifier ? `TagLinks--${modifier}` : ''}`}>\n            {!hideIcon && <Icon className={'TagLinks__icon'} icon={'Tag'} />}\n            {tags.map(tag => (\n                <SearchLink key={tag} queryKey={'tags'} queryValue={tag} />\n            ))}\n        </div>\n    );\n};\n\nTagLinks.propTypes = {\n    hideIcon: PropTypes.bool,\n    modifier: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default TagLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../common/Icon';\n\nconst TweetButton = props => {\n    const tweet = `“${props.articleTitle}” by Sean McPherson (@_seanmcp)  ̶ ${\n        props.articleHref\n    }`;\n    const href = `https://twitter.com/intent/tweet?text=${tweet}`;\n    return (\n        <a className=\"TweetButton\" href={href} target=\"_blank\">\n            <Icon className={'TweetButton__icon'} icon={'Twitter'} />\n            <span className=\"TweetButton__text\">Share</span>\n        </a>\n    );\n};\n\nTweetButton.propTypes = {\n    articleHref: PropTypes.string.isRequired,\n    articleTitle: PropTypes.string.isRequired\n};\n\nexport default TweetButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PostDate from './PostDate';\nimport CategoryLink from '../common/CategoryLink';\nimport TagLinks from '../common/TagLinks';\nimport TweetButton from './TweetButton';\n\nconst PostFooter = ({\n    articleHref,\n    articleTitle,\n    category,\n    date,\n    modifier,\n    tags\n}) => (\n    <footer\n        className={`PostFooter ${modifier ? `PostFooter--${modifier}` : ''}`}\n    >\n        {date && <PostDate date={date} modifier=\"post-footer\" />}\n        {category && <CategoryLink category={category} />}\n        <TagLinks modifier={'post-footer'} tags={tags} />\n        {articleHref && articleTitle && (\n            <TweetButton\n                articleHref={articleHref}\n                articleTitle={articleTitle}\n            />\n        )}\n    </footer>\n);\n\nPostFooter.propTypes = {\n    articleHref: PropTypes.string,\n    articleTitle: PropTypes.string,\n    date: PropTypes.string,\n    modifier: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default PostFooter;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}