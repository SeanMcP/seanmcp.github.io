{"version":3,"sources":["webpack:///./src/components/common/ArticleCategories.js","webpack:///./src/pages/articles.js","webpack:///./src/components/common/Icon.js","webpack:///./src/components/common/CategoryLink.js","webpack:///./src/components/common/SearchLink.js","webpack:///./src/components/common/PageHeader.js","webpack:///./src/components/post/PostDate.js","webpack:///./src/components/common/TagLinks.js","webpack:///./src/components/post/TweetButton.js","webpack:///./src/components/post/PostFooter.js","webpack:///./src/components/post/PostPreview.js"],"names":["ArticleCategories","_ref","list","react_default","a","createElement","className","map","category","key","fieldValue","CategoryLink","hideIcon","propTypes","PropTypes","arrayOf","shape","string","isRequired","Articles","props","siteTitle","get","siteDescription","posts","categories","Layout","location","title","Helmet_default","htmlAttributes","lang","meta","name","content","PageHeader","common_ArticleCategories","node","PostPreview","author","frontmatter","fields","slug","excerpt","date","tags","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_feather__WEBPACK_IMPORTED_MODULE_2__","Icon","icon","size","I","AllIcons","number","_Icon__WEBPACK_IMPORTED_MODULE_3__","_SearchLink__WEBPACK_IMPORTED_MODULE_4__","modifier","lede","queryKey","queryValue","bool","gatsby__WEBPACK_IMPORTED_MODULE_2__","SearchLink","to","centered","children","_common_Icon__WEBPACK_IMPORTED_MODULE_2__","PostDate","TagLinks","tag","TweetButton","href","articleTitle","articleHref","target","PostFooter","common_TagLinks","post_TweetButton","_common_CategoryLink__WEBPACK_IMPORTED_MODULE_3__","_PostFooter__WEBPACK_IMPORTED_MODULE_4__","condensed","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-articles-js-bb3d92f08c470c063767.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryLink from './CategoryLink';\n\nconst ArticleCategories = ({ list }) => {\n    return (\n        <section className={'ArticleCategories'}>\n            <span className={'ArticleCategories__title'}>Categories:</span>\n            <ul className={'ArticleCategories__list'}>\n                {list.map(category => (\n                    <li\n                        className={'ArticleCategories__list-item'}\n                        key={category.fieldValue}\n                    >\n                        <CategoryLink category={category.fieldValue} hideIcon />\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n};\n\nArticleCategories.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            fieldValue: PropTypes.string.isRequired\n        })\n    ).isRequired\n};\n\nexport default ArticleCategories;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport Helmet from 'react-helmet';\n\nimport ArticleCategories from '../components/common/ArticleCategories';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/common/PageHeader';\nimport PostPreview from '../components/post/PostPreview';\n\nconst Articles = props => {\n    const siteTitle = get(props, 'data.site.siteMetadata.title');\n    const siteDescription = get(props, 'data.site.siteMetadata.description');\n    const posts = get(props, 'data.allMarkdownRemark.edges');\n    const categories = get(props, 'data.allMarkdownRemark.group');\n\n    return (\n        <Layout location={props.location} title={siteTitle}>\n            <Helmet\n                htmlAttributes={{ lang: 'en' }}\n                meta={[{ name: 'description', content: siteDescription }]}\n                title={`Articles - ${siteTitle}`}\n            />\n            <PageHeader>\n                <h1>Articles</h1>\n                {categories && <ArticleCategories list={categories} />}\n            </PageHeader>\n            {posts.map(({ node }) => (\n                <PostPreview\n                    author={node.frontmatter.author}\n                    key={node.fields.slug}\n                    category={node.frontmatter.category}\n                    content={node.excerpt}\n                    date={node.frontmatter.date}\n                    slug={node.fields.slug}\n                    tags={node.frontmatter.tags}\n                    title={get(node, 'frontmatter.title') || node.fields.slug}\n                />\n            ))}\n        </Layout>\n    );\n};\n\nexport default Articles;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                description\n            }\n        }\n        allMarkdownRemark(\n            filter: { frontmatter: { published: { eq: true } } }\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        category\n                        date(formatString: \"MMMM DD, YYYY\")\n                        summary\n                        tags\n                        title\n                    }\n                }\n            }\n            group(field: frontmatter___category) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as AllIcons from 'react-feather';\n\nconst Icon = ({ className, icon, size }) => {\n    const I = AllIcons[icon];\n    return (\n        <I className={className ? className : null} size={size ? size : 20} />\n    );\n};\n\nIcon.propTypes = {\n    className: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.number\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Folder } from 'react-feather';\n\nimport Icon from './Icon';\nimport SearchLink from './SearchLink';\n\nconst CategoryLink = ({ category, hideIcon, lede, modifier }) => {\n    return (\n        <div\n            className={`CategoryLink ${\n                modifier ? `CategoryLink--${modifier}` : ''\n            }`}\n        >\n            {!hideIcon && (\n                <Icon className={'CategoryLink__icon'} icon={'Folder'} />\n                // <Folder className={'CategoryLink__icon'} size={20} />\n            )}\n            <SearchLink queryKey={'categories'} queryValue={category} />\n        </div>\n    );\n};\n\nCategoryLink.propTypes = {\n    category: PropTypes.string.isRequired,\n    hideIcon: PropTypes.bool,\n    lede: PropTypes.string,\n    modifier: PropTypes.string\n};\n\nexport default CategoryLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst SearchLink = ({ className, queryKey, queryValue }) => (\n    <Link\n        className={`SearchLink SearchLink--${queryKey} ${\n            className ? className : ''\n        }`}\n        to={`/${queryKey}/${queryValue}`}\n    >\n        {queryValue}\n    </Link>\n);\n\nSearchLink.propTypes = {\n    className: PropTypes.string,\n    queryKey: PropTypes.string.isRequired,\n    queryValue: PropTypes.string.isRequired\n};\n\nexport default SearchLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeader = ({ centered, children }) => {\n    return (\n        <header\n            className={`PageHeader ${centered ? 'PageHeader--centered' : ''}`}\n        >\n            {children}\n            <hr />\n        </header>\n    );\n};\n\nPageHeader.propTypes = {\n    centered: PropTypes.bool\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../common/Icon';\n\nconst PostDate = ({ date, hideIcon, modifier }) => {\n    return (\n        <div className={`PostDate ${modifier ? `PostDate--${modifier}` : ''}`}>\n            {!hideIcon && (\n                <Icon className={'PostDate__icon'} icon={'Calendar'} />\n            )}\n            <time className=\"PostDate__date\">{date}</time>\n        </div>\n    );\n};\n\nPostDate.propTypes = {\n    date: PropTypes.string.isRequired,\n    hideIcon: PropTypes.bool,\n    modifier: PropTypes.string\n};\n\nexport default PostDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchLink from './SearchLink';\nimport Icon from '../common/Icon';\n\nconst TagLinks = ({ hideIcon, modifier, tags }) => {\n    return (\n        <div className={`TagLinks ${modifier ? `TagLinks--${modifier}` : ''}`}>\n            {!hideIcon && <Icon className={'TagLinks__icon'} icon={'Tag'} />}\n            {tags.map(tag => (\n                <SearchLink key={tag} queryKey={'tags'} queryValue={tag} />\n            ))}\n        </div>\n    );\n};\n\nTagLinks.propTypes = {\n    hideIcon: PropTypes.bool,\n    modifier: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default TagLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../common/Icon';\n\nconst TweetButton = props => {\n    const tweet = `“${props.articleTitle}” by Sean McPherson (@_seanmcp)  ̶ ${\n        props.articleHref\n    }`;\n    const href = `https://twitter.com/intent/tweet?text=${tweet}`;\n    return (\n        <a className=\"TweetButton\" href={href} target=\"_blank\">\n            <Icon className={'TweetButton__icon'} icon={'Twitter'} />\n            <span className=\"TweetButton__text\">Share</span>\n        </a>\n    );\n};\n\nTweetButton.propTypes = {\n    articleHref: PropTypes.string.isRequired,\n    articleTitle: PropTypes.string.isRequired\n};\n\nexport default TweetButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PostDate from './PostDate';\nimport CategoryLink from '../common/CategoryLink';\nimport TagLinks from '../common/TagLinks';\nimport TweetButton from './TweetButton';\n\nconst PostFooter = ({\n    articleHref,\n    articleTitle,\n    category,\n    date,\n    modifier,\n    tags\n}) => (\n    <footer\n        className={`PostFooter ${modifier ? `PostFooter--${modifier}` : ''}`}\n    >\n        {date && <PostDate date={date} modifier=\"post-footer\" />}\n        {category && <CategoryLink category={category} />}\n        <TagLinks modifier={'post-footer'} tags={tags} />\n        {articleHref && articleTitle && (\n            <TweetButton\n                articleHref={articleHref}\n                articleTitle={articleTitle}\n            />\n        )}\n    </footer>\n);\n\nPostFooter.propTypes = {\n    articleHref: PropTypes.string,\n    articleTitle: PropTypes.string,\n    date: PropTypes.string,\n    modifier: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default PostFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport CategoryLink from '../common/CategoryLink';\nimport PostFooter from './PostFooter';\n\nconst PostPreview = props => (\n    <article\n        className={`PostPreview ${\n            props.condensed ? 'PostPreview--condensed' : ''\n        }`}\n    >\n        <header className=\"PostPreview__header\">\n            <h3 className=\"PostPreview__title\">\n                <Link to={`articles/${props.slug}`}>{props.title}</Link>\n            </h3>\n            <CategoryLink category={props.category} />\n        </header>\n        <p\n            className=\"PostPreview__content\"\n            dangerouslySetInnerHTML={{ __html: props.content }}\n        />\n        <PostFooter date={props.date} tags={props.tags} />\n    </article>\n);\n\nPostPreview.propTypes = {\n    author: PropTypes.string,\n    condensed: PropTypes.bool,\n    content: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n};\n\nexport default PostPreview;\n"],"sourceRoot":""}