{"version":3,"sources":["webpack:///./src/components/post/PostBio.js","webpack:///./src/components/post/PostHelmet.js","webpack:///./src/templates/PostTemplate.js","webpack:///./src/components/common/Icon.js","webpack:///./src/components/common/CategoryLink.js","webpack:///./src/components/common/SearchLink.js","webpack:///./src/components/common/PageHeader.js","webpack:///./src/components/post/PostDate.js","webpack:///./src/components/common/TagLinks.js","webpack:///./src/components/post/TweetButton.js","webpack:///./src/components/post/PostFooter.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["socialLinks","href","icon","name","PostBio","links","map","platform","react_default","a","createElement","className","key","Icon","Thumbnail","PostHelmet","_ref","postDescription","postImageUrl","postTitle","siteTitle","Helmet_default","htmlAttributes","lang","meta","content","title","propTypes","PropTypes","string","isRequired","__webpack_require__","d","__webpack_exports__","pageQuery","PostTemplate","props","location","post","data","markdownRemark","frontmatter","summary","excerpt","get","Layout","post_PostHelmet","PageHeader","centered","PostDate","date","hideIcon","dangerouslySetInnerHTML","__html","html","PostFooter","articleHref","articleTitle","category","modifier","tags","post_PostBio","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_feather__WEBPACK_IMPORTED_MODULE_2__","size","I","AllIcons","number","_Icon__WEBPACK_IMPORTED_MODULE_3__","_SearchLink__WEBPACK_IMPORTED_MODULE_4__","CategoryLink","lede","queryKey","queryValue","bool","gatsby__WEBPACK_IMPORTED_MODULE_2__","SearchLink","to","children","_common_Icon__WEBPACK_IMPORTED_MODULE_2__","TagLinks","tag","arrayOf","TweetButton","target","common_TagLinks","post_TweetButton","dP","f","FProto","Function","prototype","nameRE","configurable","this","match","e"],"mappings":"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","file":"component---src-templates-post-template-js-a93cab1a60a671fe9c54.js","sourcesContent":["import React from 'react';\n\nimport Icon from '../common/Icon';\nimport Thumbnail from '../common/Thumbnail';\n\nconst socialLinks = [\n    {\n        href: 'https://github.com/seanmcp',\n        icon: 'GitHub',\n        name: 'GitHub'\n    },\n    {\n        href: 'https://twitter.com/_seanmcp',\n        icon: 'Twitter',\n        name: 'Twitter'\n    },\n    {\n        href: 'https://linkedin.com/in/seanmcp',\n        icon: 'Linkedin',\n        name: 'LinkedIn'\n    }\n];\n\nconst PostBio = () => {\n    const links = socialLinks.map(platform => {\n        return (\n            <li className=\"PostBio__social-item\" key={platform.name}>\n                <Icon className=\"PostBio__social-icon\" icon={platform.icon} />\n                <a className=\"PostBio__social-link\" href={platform.href}>\n                    {platform.name}\n                </a>\n            </li>\n        );\n    });\n    return (\n        <section className=\"PostBio\">\n            <Thumbnail className={'PostBio__image'} />\n            <main className=\"PostBio__content\">\n                <p>\n                    My name is <strong>Sean McPherson</strong>, and I am a\n                    software developer in Atlanta, GA. I write about web\n                    development, JavaScript, React, and occassionally some other\n                    things.\n                </p>\n                <ul className=\"PostBio__social-list\">{links}</ul>\n            </main>\n        </section>\n    );\n};\n\nexport default PostBio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\n\nconst PostHelmet = ({\n    postDescription,\n    postImageUrl,\n    postTitle,\n    siteTitle\n}) => (\n    <Helmet\n        htmlAttributes={{ lang: 'en' }}\n        meta={[{ name: 'description', content: postDescription }]}\n        title={`${postTitle} | ${siteTitle}`}\n    >\n        <meta name=\"twitter:card\" content={postDescription} />\n        <meta name=\"twitter:site\" content=\"@_seanmcp\" />\n        <meta name=\"twitter:title\" content={postTitle} />\n        {/* <meta name=\"twitter:description\" content=\"View the album on Flickr.\" /> */}\n        {postImageUrl && <meta name=\"twitter:image\" content={postImageUrl} />}\n    </Helmet>\n);\n\nPostHelmet.propTypes = {\n    postDescription: PropTypes.string.isRequired,\n    postImageUrl: PropTypes.string,\n    postTitle: PropTypes.string.isRequired,\n    siteTitle: PropTypes.string.isRequired\n};\n\nexport default PostHelmet;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/common/PageHeader';\nimport PostBio from '../components/post/PostBio';\nimport PostDate from '../components/post/PostDate';\nimport PostFooter from '../components/post/PostFooter';\nimport PostHelmet from '../components/post/PostHelmet';\n\nconst PostTemplate = props => {\n    const { location } = props;\n    const post = props.data.markdownRemark;\n    const postDescription = post.frontmatter.summary || post.excerpt;\n    const postTitle = post.frontmatter.title;\n    const siteTitle = get(props, 'data.site.siteMetadata.title');\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <PostHelmet\n                postDescription={postDescription}\n                postTitle={postTitle}\n                siteTitle={siteTitle}\n            />\n            <article className=\"PostTemplate\">\n                <PageHeader centered>\n                    <h1>{postTitle}</h1>\n                    <section className={'PostTemplate__details'}>\n                        <PostDate date={post.frontmatter.date} hideIcon />\n                    </section>\n                </PageHeader>\n                <main dangerouslySetInnerHTML={{ __html: post.html }} />\n                <hr />\n                <PostFooter\n                    articleHref={location.href}\n                    articleTitle={post.frontmatter.title}\n                    category={post.frontmatter.category}\n                    date={post.frontmatter.date}\n                    modifier={'post-template'}\n                    tags={post.frontmatter.tags}\n                />\n                <hr />\n                <PostBio />\n            </article>\n        </Layout>\n    );\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt\n            html\n            frontmatter {\n                category\n                date(formatString: \"MMMM D, YYYY\")\n                summary\n                tags\n                title\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as AllIcons from 'react-feather';\n\nconst Icon = ({ className, icon, size }) => {\n    const I = AllIcons[icon];\n    return (\n        <I className={className ? className : null} size={size ? size : 20} />\n    );\n};\n\nIcon.propTypes = {\n    className: PropTypes.string,\n    icon: PropTypes.string.isRequired,\n    size: PropTypes.number\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Folder } from 'react-feather';\n\nimport Icon from './Icon';\nimport SearchLink from './SearchLink';\n\nconst CategoryLink = ({ category, hideIcon, lede, modifier }) => {\n    return (\n        <div\n            className={`CategoryLink ${\n                modifier ? `CategoryLink--${modifier}` : ''\n            }`}\n        >\n            {!hideIcon && (\n                <Icon className={'CategoryLink__icon'} icon={'Folder'} />\n                // <Folder className={'CategoryLink__icon'} size={20} />\n            )}\n            <SearchLink queryKey={'categories'} queryValue={category} />\n        </div>\n    );\n};\n\nCategoryLink.propTypes = {\n    category: PropTypes.string.isRequired,\n    hideIcon: PropTypes.bool,\n    lede: PropTypes.string,\n    modifier: PropTypes.string\n};\n\nexport default CategoryLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst SearchLink = ({ className, queryKey, queryValue }) => (\n    <Link\n        className={`SearchLink SearchLink--${queryKey} ${\n            className ? className : ''\n        }`}\n        to={`/${queryKey}/${queryValue}`}\n    >\n        {queryValue}\n    </Link>\n);\n\nSearchLink.propTypes = {\n    className: PropTypes.string,\n    queryKey: PropTypes.string.isRequired,\n    queryValue: PropTypes.string.isRequired\n};\n\nexport default SearchLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageHeader = ({ centered, children }) => {\n    return (\n        <header\n            className={`PageHeader ${centered ? 'PageHeader--centered' : ''}`}\n        >\n            {children}\n            <hr />\n        </header>\n    );\n};\n\nPageHeader.propTypes = {\n    centered: PropTypes.bool\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../common/Icon';\n\nconst PostDate = ({ date, hideIcon, modifier }) => {\n    return (\n        <div className={`PostDate ${modifier ? `PostDate--${modifier}` : ''}`}>\n            {!hideIcon && (\n                <Icon className={'PostDate__icon'} icon={'Calendar'} />\n            )}\n            <time className=\"PostDate__date\">{date}</time>\n        </div>\n    );\n};\n\nPostDate.propTypes = {\n    date: PropTypes.string.isRequired,\n    hideIcon: PropTypes.bool,\n    modifier: PropTypes.string\n};\n\nexport default PostDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchLink from './SearchLink';\nimport Icon from '../common/Icon';\n\nconst TagLinks = ({ hideIcon, modifier, tags }) => {\n    return (\n        <div className={`TagLinks ${modifier ? `TagLinks--${modifier}` : ''}`}>\n            {!hideIcon && <Icon className={'TagLinks__icon'} icon={'Tag'} />}\n            {tags.map(tag => (\n                <SearchLink key={tag} queryKey={'tags'} queryValue={tag} />\n            ))}\n        </div>\n    );\n};\n\nTagLinks.propTypes = {\n    hideIcon: PropTypes.bool,\n    modifier: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default TagLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../common/Icon';\n\nconst TweetButton = props => {\n    const tweet = `“${props.articleTitle}” by Sean McPherson (@_seanmcp)  ̶ ${\n        props.articleHref\n    }`;\n    const href = `https://twitter.com/intent/tweet?text=${tweet}`;\n    return (\n        <a className=\"TweetButton\" href={href} target=\"_blank\">\n            <Icon className={'TweetButton__icon'} icon={'Twitter'} />\n            <span className=\"TweetButton__text\">Share</span>\n        </a>\n    );\n};\n\nTweetButton.propTypes = {\n    articleHref: PropTypes.string.isRequired,\n    articleTitle: PropTypes.string.isRequired\n};\n\nexport default TweetButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PostDate from './PostDate';\nimport CategoryLink from '../common/CategoryLink';\nimport TagLinks from '../common/TagLinks';\nimport TweetButton from './TweetButton';\n\nconst PostFooter = ({\n    articleHref,\n    articleTitle,\n    category,\n    date,\n    modifier,\n    tags\n}) => (\n    <footer\n        className={`PostFooter ${modifier ? `PostFooter--${modifier}` : ''}`}\n    >\n        {date && <PostDate date={date} modifier=\"post-footer\" />}\n        {category && <CategoryLink category={category} />}\n        <TagLinks modifier={'post-footer'} tags={tags} />\n        {articleHref && articleTitle && (\n            <TweetButton\n                articleHref={articleHref}\n                articleTitle={articleTitle}\n            />\n        )}\n    </footer>\n);\n\nPostFooter.propTypes = {\n    articleHref: PropTypes.string,\n    articleTitle: PropTypes.string,\n    date: PropTypes.string,\n    modifier: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default PostFooter;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}